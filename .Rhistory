#1. Upload packages
library("e1071")
library("tidyverse")
library("pROC")
library("ModelMetrics")
library("caret")
library(dplyr)
library(DataExplorer)
library(haven)
x <- read_sav("ed2007-spss.sav")
y2007 <- x %>%
select(AGE,SEX,ARRIVE,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMED,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANSFER)%>%
filter(AGE<19)
y2007 <- y2007 %>%
rename(
ARREMS = ARRIVE,
IMMEDR = IMMED,
LEFTBTRI = LEFTBMSE,
LEFTATRI = LEFTAMSE,
TRANOTH = TRANSFER
)
x <- read_sav("ed2008-spss.sav")
y2008 <- x %>%
select(AGE,SEX,ARRIVE,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMED,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANSFER)%>%
filter(AGE<19)
y2008 <- y2008 %>%
rename(
ARREMS = ARRIVE,
IMMEDR = IMMED,
LEFTBTRI = LEFTBMSE,
LEFTATRI = LEFTAMSE,
TRANOTH = TRANSFER)
x <- read_sav("ed2009-spss.sav")
y2009 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
y2009 <- y2009 %>%
rename(
LEFTATRI = LEFTAMSE
)
x <- read_sav("ed2010-spss.sav")
y2010 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
x <- read_sav("ed2011-spss.sav")
y2011 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
x <- read_sav("ed2012-spss.sav")
y2012 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
x <- read_sav("ed2013-spss.sav")
y2013 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
x <- read_sav("ed2014-spss.sav")
y2014 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
x <- read_sav("ed2015-spss.sav")
y2015 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
mydataset= bind_rows(y2007,y2008)
names(y2009) = names(mydataset)
mydataset= bind_rows(mydataset,y2009)
names(y2010) = names(mydataset)
mydataset= bind_rows(mydataset,y2010)
mydataset= bind_rows(mydataset,y2011)
mydataset= bind_rows(mydataset,y2012)
mydataset= bind_rows(mydataset,y2013)
mydataset= bind_rows(mydataset,y2014)
mydataset= bind_rows(mydataset,y2015)
triaged <- mydataset %>%  #triage darand
filter(IMMEDR==1 |IMMEDR==2 |IMMEDR==3 |IMMEDR==4 |IMMEDR==5)
not_doa <- triaged %>% # ghable vorood namordand 2
filter(DOA == 0 )
entebagh <- not_doa %>%  # entebagh alaeme hayati darand 140
filter(BPDIAS<200)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 0
filter(BPSYS<300)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 0
filter(POPCT<=100)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 28
filter(PULSE<300)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 55
filter(RESPR<80)
not_lwbs <- entebagh %>% #tarke ghable triage 351
filter(LEFTBTRI == 0)
not_lwbs <- not_lwbs %>% #tarke bade triage 560
filter(LEFTATRI == 0)
not_lwbs <- not_lwbs %>% #tarke bade shoro darman triage 252
filter(LEFTAMA == 0)
mydataset = not_lwbs
outcome <- ifelse(mydataset$ADMIT==1,1,
ifelse(mydataset$DIEDED==1,1,
ifelse(mydataset$HDSTAT==2,1,0)))
mydataset3 <- cbind(mydataset,outcome)
df_models_triage <- mydataset3 %>%
rename(
triage = IMMEDR
)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.character)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.numeric)
#################################################################
## Reference model -- logistic regression with triage variable ##
#################################################################
# Split into training/test sets
n <-  nrow(df_models_triage)
n_train <- round(0.7 * n) # 70% of the dataset
set.seed(1)
df_models_triage <- mydataset3 %>%
rename(
triage = IMMEDR
)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.character)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.numeric)
df_models_triage <- mydataset3 %>%
rename(
triage = IMMEDR
)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.numeric)
#################################################################
## Reference model -- logistic regression with triage variable ##
#################################################################
# Split into training/test sets
n <-  nrow(df_models_triage)
n_train <- round(0.7 * n) # 70% of the dataset
set.seed(1)
train_indices <- sample(1:n, n_train)
df_train_triage <- df_models_triage[ train_indices, ]
df_test_triage  <- df_models_triage[-train_indices, ]
# Fit logistic regression
fit_logistic_triage <- glm(outcome ~ triage,
family=binomial(link="logit"),
data=df_train_triage)
# Prediction in test set
pred_logistic_prob_triage <- predict(fit_logistic_triage,
newdata = df_test_triage, type = "response")
pred_logistic_prob_triage[1]
pred_logistic_prob_triage["10001"]
pred_logistic_prob_triage[10001]
pred_logistic_prob_triage
# ROC
(roc_logistic_triage <- roc(response = df_test_triage$outcome,
predictor= pred_logistic_prob_triage) )
plot(roc_logistic_triage, legacy.axes=TRUE)
df_test_triage$outcome
max(df_test_triage$outcome)
min(df_test_triage$outcome)
# Confusion Matrix -- threshold = prevalence
prevalence <- mean(as.numeric(df_test_triage$outcome))
raz = c("No", "Yes") # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome))
raz = c("No", "Yes") # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:490),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:490),
mode      = "sens_spec",
positive  = "Yes")
df_test_triage$outcome[1]
pred_logistic_class_triage[0]
# Confusion Matrix -- threshold = prevalence
prevalence <- mean(as.numeric(df_test_triage$outcome))
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(labels = c("No", "Yes"))
caret::confusionMatrix(data      = pred_logistic_class_triage,
reference = df_test_triage$outcome,
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome))
raz = c("No", "Yes") # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:5),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:5),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:3),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:3),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(labels = c("No", "Yes"))
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:3),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:3),
mode      = "sens_spec",
positive  = "Yes")
pred_logistic_class_triage
raz = c(0, 1) # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:3),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:3),
mode      = "sens_spec",
positive  = "Yes")
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome))
raz = c(0, 1) # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome)),
mode      = "sens_spec",
positive  = "Yes")
raz = c(1, 0) # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
caret::confusionMatrix(factor((data = pred_logistic_class_triage),levels=1:2),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=1:2),
mode      = "sens_spec",
positive  = "Yes")
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome))
library( caret)
confusionMatrix( pred_logistic_class_triage,   #injaro ham taghir dadam
reference = df_test_triage$outcome,
mode      = "sens_spec",
positive  = "Yes")
confusionMatrix( pred_logistic_class_triage,   #injaro ham taghir dadam
df_test_triage$outcome,
mode      = "sens_spec",
positive  = "Yes")
pred_logistic_class_triage
df_test_triage$outcome
factor(df_test_triage$outcome)
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(1,0)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(0,1)),
mode      = "sens_spec",
positive  = "Yes")
raz = c("No", "Yes") # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(1,0)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(0,1)),
mode      = "sens_spec",
positive  = "Yes")
raz = c("No", "Yes") # inja ro ezafe kardam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0)
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(0,1)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(0,1)),
mode      = "sens_spec",
positive  = "Yes")
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(1,0)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(0,1)),
mode      = "sens_spec",
positive  = "Yes")
pred_logistic_class_triage
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(1,0)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(1,2)),
mode      = "sens_spec",
positive  = "Yes")
confusionMatrix(factor((data = pred_logistic_class_triage),levels=c(0,1)),   #injaro ham taghir dadam
factor((reference = df_test_triage$outcome),levels=c(0,1)),
mode      = "sens_spec",
positive  = "Yes")
factor((data = pred_logistic_class_triage),levels=c(1,0)
)
sum(factor((data = pred_logistic_class_triage),levels=c(1,0)))
sum( pred_logistic_class_triage)
sum(df_test_triage$outcome)
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0) %>% factor(raz)#inja ro taghir dadam
sum( pred_logistic_class_triage)
pred_logistic_class_triage <- ifelse(pred_logistic_prob_triage >=  prevalence, 1, 0)
sum( pred_logistic_class_triage)
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- median(as.numeric(df_test_triage$outcome)-1)
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- median(as.numeric(df_test_triage$outcome))
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- mean(as.numeric(df_test_triage$outcome))
# Confusion Matrix -- threshold = prevalence
# prevalence <- mean(as.numeric(df_test_triage$outcome)-1)
prevalence <- quantile(as.numeric(df_test_triage$outcome))
source("dca.r") # This file is avaible at http://www.decisioncurveanalysis.org
library(reshape2)
dcadata$logistic<-as.numeric(pred_logistic_prob_triage)
#1. Upload packages
library("e1071")
library("tidyverse")
library("pROC")
library("ModelMetrics")
library("caret")
library(dplyr)
library(DataExplorer)
library( caret)
library(haven)
x <- read_sav("ed2007-spss.sav")
y2007 <- x %>%
select(AGE,SEX,ARRIVE,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMED,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANSFER)%>%
filter(AGE<19)
y2007 <- y2007 %>%
rename(
ARREMS = ARRIVE,
IMMEDR = IMMED,
LEFTBTRI = LEFTBMSE,
LEFTATRI = LEFTAMSE,
TRANOTH = TRANSFER
)
x <- read_sav("ed2008-spss.sav")
y2008 <- x %>%
select(AGE,SEX,ARRIVE,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMED,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANSFER)%>%
filter(AGE<19)
y2008 <- y2008 %>%
rename(
ARREMS = ARRIVE,
IMMEDR = IMMED,
LEFTBTRI = LEFTBMSE,
LEFTATRI = LEFTAMSE,
TRANOTH = TRANSFER)
x <- read_sav("ed2009-spss.sav")
y2009 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBMSE,LEFTAMSE,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
y2009 <- y2009 %>%
rename(
LEFTATRI = LEFTAMSE
)
x <- read_sav("ed2010-spss.sav")
y2010 <- x %>%
select(AGE,SEX,ARREMS,TEMPF,PULSE,RESPR,BPSYS,BPDIAS,POPCT,SEEN72,RFV1,IMMEDR,LEFTBTRI,LEFTATRI,LEFTAMA,DIEDED,DOA,ADMIT,HDSTAT,ADMITHOS,TRANOTH)%>%
filter(AGE<19)
mydataset= bind_rows(y2007,y2008)
names(y2009) = names(mydataset)
mydataset= bind_rows(mydataset,y2009)
names(y2010) = names(mydataset)
mydataset= bind_rows(mydataset,y2010)
mydataset= bind_rows(mydataset,y2011)
triaged <- mydataset %>%  #triage darand
filter(IMMEDR==1 |IMMEDR==2 |IMMEDR==3 |IMMEDR==4 |IMMEDR==5)
not_doa <- triaged %>% # ghable vorood namordand 2
filter(DOA == 0 )
entebagh <- not_doa %>%  # entebagh alaeme hayati darand 140
filter(BPDIAS<200)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 0
filter(BPSYS<300)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 0
filter(POPCT<=100)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 28
filter(PULSE<300)
entebagh <- entebagh %>%  # entebagh alaeme hayati darand 55
filter(RESPR<80)
not_lwbs <- entebagh %>% #tarke ghable triage 351
filter(LEFTBTRI == 0)
not_lwbs <- not_lwbs %>% #tarke bade triage 560
filter(LEFTATRI == 0)
not_lwbs <- not_lwbs %>% #tarke bade shoro darman triage 252
filter(LEFTAMA == 0)
mydataset = not_lwbs
outcome <- ifelse(mydataset$ADMIT==1,1,
ifelse(mydataset$DIEDED==1,1,
ifelse(mydataset$HDSTAT==2,1,0)))
mydataset3 <- cbind(mydataset,outcome)
df_models_triage <- mydataset3 %>%
rename(
triage = IMMEDR
)
df_models_triage[,1:22]< sapply(df_models_triage[,1:22],as.factor)
